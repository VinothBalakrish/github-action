name: Spring Petclinic CI/CD Pipeline
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  DOCKER_IMAGE: docker.io/vinothbalakrish/petclinic-githubci
  JAVA_VERSION: '25'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  build-and-test:
    name: Build & Test with Maven
    runs-on: [git]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        cache: 'maven'
    
    - name: Verify Java Version
      run: |
        echo "JAVA_HOME: $JAVA_HOME"
        java -version
        mvn -version
    
    - name: Build with Maven
      run: mvn clean package -DskipTests
    
    # - name: Run Tests
    #   run: mvn test
    
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: petclinic-jar
        path: target/*.jar
        retention-days: 1

  build-docker-image:
    name: Build & Push Docker Image
    needs: build-and-test
    runs-on: [git]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: petclinic-jar
        path: target/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max
    
    - name: Image digest
      run: echo "Image pushed with digest ${{ steps.meta.outputs.tags }}"
